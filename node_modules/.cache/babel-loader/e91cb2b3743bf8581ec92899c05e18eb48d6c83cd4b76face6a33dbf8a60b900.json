{"ast":null,"code":"var _jsxFileName = \"/Users/markmados/Code/MadosMark.github.io/src/mainPage.tsx\",\n  _s = $RefreshSig$();\nimport \"./mainPage.css\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport gsap from \"gsap\";\nimport { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst media = [{\n  type: \"video\",\n  src: \"/ocean.mp4\"\n}, {\n  type: \"\",\n  src: \"\"\n}];\nfunction MainPage() {\n  _s();\n  const videoRefs = useRef([]);\n  useEffect(() => {\n    const screenHeight = window.innerHeight;\n    const startX = screenHeight / 2;\n    const offset = parseInt(\"50px\", 10);\n    const startY = startX - offset;\n    gsap.fromTo(\".circle\", {\n      y: startY\n    }, {\n      delay: 2,\n      y: 0,\n      duration: 2.5,\n      ease: \"power1.inOut\"\n    });\n  }, []);\n  useEffect(() => {\n    const screenWidth = window.innerWidth;\n    const startX = screenWidth / 4;\n    const startyX = -screenWidth / 4;\n    gsap.fromTo(\".textOne\", {\n      x: startyX\n    }, {\n      duration: 4.5,\n      x: 0,\n      ease: \"slow\"\n    });\n    gsap.fromTo(\".textTwo\", {\n      x: startX\n    }, {\n      duration: 4.5,\n      x: 0,\n      ease: \"slow\"\n    });\n  }, []);\n  useEffect(() => {\n    if (videoRefs.current.length > 0) {\n      // Iterate over each video element and play it\n      videoRefs.current.forEach(video => {\n        if (video && typeof video.play === \"function\") {\n          video.play().catch(error => {\n            // Handle error if autoplay is blocked or other issues\n            console.error(\"Failed to play video:\", error);\n          });\n        }\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AnimatePresence, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(motion.text, {\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        },\n        transition: {\n          delay: 2,\n          duration: 2\n        },\n        className: \"textOne\",\n        children: \"SUNBURNED\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(motion.svg, {\n        className: \"circle\",\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        },\n        transition: {\n          duration: 5\n        },\n        width: \"100\",\n        height: \"50\",\n        viewBox: \"0 0 512 422\",\n        fill: \"none\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          fillRule: \"evenodd\",\n          clipRule: \"evenodd\",\n          fill: \"black\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(motion.text, {\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1\n        },\n        transition: {\n          delay: 2,\n          duration: 2\n        },\n        className: \"textTwo\",\n        children: \"MEMOIRS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"imageContainer\",\n        children: media.map((item, index) => {\n          if (item.type === \"image\") {\n            return /*#__PURE__*/_jsxDEV(\"img\", {\n              alt: \"media\",\n              src: item.src,\n              width: \"100%\",\n              height: \"100%\"\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this);\n          } else if (item.type === \"video\") {\n            return /*#__PURE__*/_jsxDEV(\"video\", {\n              ref: el => {\n                if (el) {\n                  videoRefs.current[index] = el;\n                }\n              },\n              width: \"100%\",\n              height: \"100%\",\n              autoPlay: true,\n              loop: true,\n              muted: true,\n              controls: true,\n              children: [/*#__PURE__*/_jsxDEV(\"source\", {\n                src: \"/Users/markmados/Code/MadosMark.github.io/src/ocean.mp4\",\n                type: \"video/mp4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this), \"Your browser does not support the video tag.\"]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this);\n          } else if (item.type === \"youtube\") {\n            const youtubeEmbedUrl = `https://www.youtube.com/embed/${item.src}`;\n            return /*#__PURE__*/_jsxDEV(\"iframe\", {\n              width: \"100%\",\n              height: \"100%\",\n              src: youtubeEmbedUrl,\n              frameBorder: \"0\",\n              allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n              allowFullScreen: true,\n              title: \"YouTube video\"\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this);\n          } else {\n            return null;\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(MainPage, \"BuM9FgUK5YIMGvBzjSGiO9cvJsc=\");\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["AnimatePresence","motion","gsap","useEffect","useRef","jsxDEV","_jsxDEV","media","type","src","MainPage","_s","videoRefs","screenHeight","window","innerHeight","startX","offset","parseInt","startY","fromTo","y","delay","duration","ease","screenWidth","innerWidth","startyX","x","current","length","forEach","video","play","catch","error","console","children","className","text","initial","opacity","animate","transition","fileName","_jsxFileName","lineNumber","columnNumber","svg","width","height","viewBox","fill","xmlns","fillRule","clipRule","map","item","index","alt","ref","el","autoPlay","loop","muted","controls","youtubeEmbedUrl","frameBorder","allow","allowFullScreen","title","_c","$RefreshReg$"],"sources":["/Users/markmados/Code/MadosMark.github.io/src/mainPage.tsx"],"sourcesContent":["import \"./mainPage.css\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport gsap from \"gsap\";\nimport { useEffect, useRef } from \"react\";\n\nconst media = [\n  {\n    type: \"video\",\n    src: \"/ocean.mp4\",\n  },\n  {\n    type: \"\",\n    src: \"\",\n  },\n];\n\nfunction MainPage() {\n  const videoRefs = useRef<HTMLVideoElement[]>([]);\n\n  useEffect(() => {\n    const screenHeight = window.innerHeight;\n    const startX = screenHeight / 2;\n    const offset = parseInt(\"50px\", 10);\n    const startY = startX - offset;\n\n    gsap.fromTo(\n      \".circle\",\n      { y: startY },\n      { delay: 2, y: 0, duration: 2.5, ease: \"power1.inOut\" }\n    );\n  }, []);\n\n  useEffect(() => {\n    const screenWidth = window.innerWidth;\n    const startX = screenWidth / 4;\n    const startyX = -screenWidth / 4;\n\n    gsap.fromTo(\n      \".textOne\",\n      { x: startyX },\n      { duration: 4.5, x: 0, ease: \"slow\" }\n    );\n\n    gsap.fromTo(\n      \".textTwo\",\n      { x: startX },\n      { duration: 4.5, x: 0, ease: \"slow\" }\n    );\n  }, []);\n\n  useEffect(() => {\n    if (videoRefs.current.length > 0) {\n      // Iterate over each video element and play it\n      videoRefs.current.forEach((video) => {\n        if (video && typeof video.play === \"function\") {\n          video.play().catch((error) => {\n            // Handle error if autoplay is blocked or other issues\n            console.error(\"Failed to play video:\", error);\n          });\n        }\n      });\n    }\n  }, []);\n\n  return (\n    <AnimatePresence>\n      <div className=\"container\">\n        <motion.text\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ delay: 2, duration: 2 }}\n          className=\"textOne\"\n        >\n          SUNBURNED\n        </motion.text>\n        <motion.svg\n          className=\"circle\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ duration: 5 }}\n          width=\"100\"\n          height=\"50\"\n          viewBox=\"0 0 512 422\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path fillRule=\"evenodd\" clipRule=\"evenodd\" fill=\"black\" />\n        </motion.svg>\n        <motion.text\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ delay: 2, duration: 2 }}\n          className=\"textTwo\"\n        >\n          MEMOIRS\n        </motion.text>\n        <div className=\"imageContainer\">\n          {media.map((item, index) => {\n            if (item.type === \"image\") {\n              return (\n                <img\n                  key={index}\n                  alt=\"media\"\n                  src={item.src}\n                  width=\"100%\"\n                  height=\"100%\"\n                />\n              );\n            } else if (item.type === \"video\") {\n              return (\n                <video\n                  key={index}\n                  ref={(el) => {\n                    if (el) {\n                      videoRefs.current[index] = el;\n                    }\n                  }}\n                  width=\"100%\"\n                  height=\"100%\"\n                  autoPlay={true}\n                  loop={true}\n                  muted\n                  controls\n                >\n                  <source\n                    src=\"/Users/markmados/Code/MadosMark.github.io/src/ocean.mp4\"\n                    type=\"video/mp4\"\n                  />\n                  Your browser does not support the video tag.\n                </video>\n              );\n            } else if (item.type === \"youtube\") {\n              const youtubeEmbedUrl = `https://www.youtube.com/embed/${item.src}`;\n              return (\n                <iframe\n                  key={index}\n                  width=\"100%\"\n                  height=\"100%\"\n                  src={youtubeEmbedUrl}\n                  frameBorder=\"0\"\n                  allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                  allowFullScreen\n                  title=\"YouTube video\"\n                ></iframe>\n              );\n            } else {\n              return null;\n            }\n          })}\n        </div>\n      </div>\n    </AnimatePresence>\n  );\n}\n\nexport default MainPage;\n"],"mappings":";;AAAA,OAAO,gBAAgB;AACvB,SAASA,eAAe,EAAEC,MAAM,QAAQ,eAAe;AACvD,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,KAAK,GAAG,CACZ;EACEC,IAAI,EAAE,OAAO;EACbC,GAAG,EAAE;AACP,CAAC,EACD;EACED,IAAI,EAAE,EAAE;EACRC,GAAG,EAAE;AACP,CAAC,CACF;AAED,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,SAAS,GAAGR,MAAM,CAAqB,EAAE,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd,MAAMU,YAAY,GAAGC,MAAM,CAACC,WAAW;IACvC,MAAMC,MAAM,GAAGH,YAAY,GAAG,CAAC;IAC/B,MAAMI,MAAM,GAAGC,QAAQ,CAAC,MAAM,EAAE,EAAE,CAAC;IACnC,MAAMC,MAAM,GAAGH,MAAM,GAAGC,MAAM;IAE9Bf,IAAI,CAACkB,MAAM,CACT,SAAS,EACT;MAAEC,CAAC,EAAEF;IAAO,CAAC,EACb;MAAEG,KAAK,EAAE,CAAC;MAAED,CAAC,EAAE,CAAC;MAAEE,QAAQ,EAAE,GAAG;MAAEC,IAAI,EAAE;IAAe,CACxD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAENrB,SAAS,CAAC,MAAM;IACd,MAAMsB,WAAW,GAAGX,MAAM,CAACY,UAAU;IACrC,MAAMV,MAAM,GAAGS,WAAW,GAAG,CAAC;IAC9B,MAAME,OAAO,GAAG,CAACF,WAAW,GAAG,CAAC;IAEhCvB,IAAI,CAACkB,MAAM,CACT,UAAU,EACV;MAAEQ,CAAC,EAAED;IAAQ,CAAC,EACd;MAAEJ,QAAQ,EAAE,GAAG;MAAEK,CAAC,EAAE,CAAC;MAAEJ,IAAI,EAAE;IAAO,CACtC,CAAC;IAEDtB,IAAI,CAACkB,MAAM,CACT,UAAU,EACV;MAAEQ,CAAC,EAAEZ;IAAO,CAAC,EACb;MAAEO,QAAQ,EAAE,GAAG;MAAEK,CAAC,EAAE,CAAC;MAAEJ,IAAI,EAAE;IAAO,CACtC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAENrB,SAAS,CAAC,MAAM;IACd,IAAIS,SAAS,CAACiB,OAAO,CAACC,MAAM,GAAG,CAAC,EAAE;MAChC;MACAlB,SAAS,CAACiB,OAAO,CAACE,OAAO,CAAEC,KAAK,IAAK;QACnC,IAAIA,KAAK,IAAI,OAAOA,KAAK,CAACC,IAAI,KAAK,UAAU,EAAE;UAC7CD,KAAK,CAACC,IAAI,CAAC,CAAC,CAACC,KAAK,CAAEC,KAAK,IAAK;YAC5B;YACAC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;UAC/C,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE7B,OAAA,CAACN,eAAe;IAAAqC,QAAA,eACd/B,OAAA;MAAKgC,SAAS,EAAC,WAAW;MAAAD,QAAA,gBACxB/B,OAAA,CAACL,MAAM,CAACsC,IAAI;QACVC,OAAO,EAAE;UAAEC,OAAO,EAAE;QAAE,CAAE;QACxBC,OAAO,EAAE;UAAED,OAAO,EAAE;QAAE,CAAE;QACxBE,UAAU,EAAE;UAAErB,KAAK,EAAE,CAAC;UAAEC,QAAQ,EAAE;QAAE,CAAE;QACtCe,SAAS,EAAC,SAAS;QAAAD,QAAA,EACpB;MAED;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eACdzC,OAAA,CAACL,MAAM,CAAC+C,GAAG;QACTV,SAAS,EAAC,QAAQ;QAClBE,OAAO,EAAE;UAAEC,OAAO,EAAE;QAAE,CAAE;QACxBC,OAAO,EAAE;UAAED,OAAO,EAAE;QAAE,CAAE;QACxBE,UAAU,EAAE;UAAEpB,QAAQ,EAAE;QAAE,CAAE;QAC5B0B,KAAK,EAAC,KAAK;QACXC,MAAM,EAAC,IAAI;QACXC,OAAO,EAAC,aAAa;QACrBC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAC,4BAA4B;QAAAhB,QAAA,eAElC/B,OAAA;UAAMgD,QAAQ,EAAC,SAAS;UAACC,QAAQ,EAAC,SAAS;UAACH,IAAI,EAAC;QAAO;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eACbzC,OAAA,CAACL,MAAM,CAACsC,IAAI;QACVC,OAAO,EAAE;UAAEC,OAAO,EAAE;QAAE,CAAE;QACxBC,OAAO,EAAE;UAAED,OAAO,EAAE;QAAE,CAAE;QACxBE,UAAU,EAAE;UAAErB,KAAK,EAAE,CAAC;UAAEC,QAAQ,EAAE;QAAE,CAAE;QACtCe,SAAS,EAAC,SAAS;QAAAD,QAAA,EACpB;MAED;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC,eACdzC,OAAA;QAAKgC,SAAS,EAAC,gBAAgB;QAAAD,QAAA,EAC5B9B,KAAK,CAACiD,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;UAC1B,IAAID,IAAI,CAACjD,IAAI,KAAK,OAAO,EAAE;YACzB,oBACEF,OAAA;cAEEqD,GAAG,EAAC,OAAO;cACXlD,GAAG,EAAEgD,IAAI,CAAChD,GAAI;cACdwC,KAAK,EAAC,MAAM;cACZC,MAAM,EAAC;YAAM,GAJRQ,KAAK;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAKX,CAAC;UAEN,CAAC,MAAM,IAAIU,IAAI,CAACjD,IAAI,KAAK,OAAO,EAAE;YAChC,oBACEF,OAAA;cAEEsD,GAAG,EAAGC,EAAE,IAAK;gBACX,IAAIA,EAAE,EAAE;kBACNjD,SAAS,CAACiB,OAAO,CAAC6B,KAAK,CAAC,GAAGG,EAAE;gBAC/B;cACF,CAAE;cACFZ,KAAK,EAAC,MAAM;cACZC,MAAM,EAAC,MAAM;cACbY,QAAQ,EAAE,IAAK;cACfC,IAAI,EAAE,IAAK;cACXC,KAAK;cACLC,QAAQ;cAAA5B,QAAA,gBAER/B,OAAA;gBACEG,GAAG,EAAC,yDAAyD;gBAC7DD,IAAI,EAAC;cAAW;gBAAAoC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjB,CAAC,gDAEJ;YAAA,GAlBOW,KAAK;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAkBL,CAAC;UAEZ,CAAC,MAAM,IAAIU,IAAI,CAACjD,IAAI,KAAK,SAAS,EAAE;YAClC,MAAM0D,eAAe,GAAG,iCAAiCT,IAAI,CAAChD,GAAG,EAAE;YACnE,oBACEH,OAAA;cAEE2C,KAAK,EAAC,MAAM;cACZC,MAAM,EAAC,MAAM;cACbzC,GAAG,EAAEyD,eAAgB;cACrBC,WAAW,EAAC,GAAG;cACfC,KAAK,EAAC,0FAA0F;cAChGC,eAAe;cACfC,KAAK,EAAC;YAAe,GAPhBZ,KAAK;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAQH,CAAC;UAEd,CAAC,MAAM;YACL,OAAO,IAAI;UACb;QACF,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAEtB;AAACpC,EAAA,CAzIQD,QAAQ;AAAA6D,EAAA,GAAR7D,QAAQ;AA2IjB,eAAeA,QAAQ;AAAC,IAAA6D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}